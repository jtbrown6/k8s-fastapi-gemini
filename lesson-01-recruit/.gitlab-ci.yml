# -----Jamal Instructions-----
# Phase 1:
# first we need to create the stages which are going to be the dockerbuild and the docker push commands
# Phase 2: 
# now we need to create a job, the job is what has the specific commands needed
# we will be running the docker build commands to run the job
# also there are things called "Predefined CI/CD Variables" and the CI_COMMIT_SHORT_SHA is one of them, below are more

##---Predefined CI/CD Vars-----
# CI_PROJECT_NAME: The name of the project.
# CI_PROJECT_NAMESPACE: The namespace (group or user) the project belongs to.
# CI_COMMIT_REF_NAME: The branch or tag name the commit belongs to.
# CI_COMMIT_TAG: The Git tag name (only available if the pipeline was triggered by a tag).
# CI_PIPELINE_ID: The unique ID of the current pipeline.
# CI_JOB_ID: The unique ID of the current job.
# CI_REGISTRY_IMAGE: The default address of the container registry linked to the project (if using GitLab's integrated registry).


# Phase 1: Define the Pipeline Stages
stages:
  - build
  - push

# Phase 4: Define Variables
variables:
  HARBOR_REGISTRY: harbor.komebacklab.local
  HARBOR_PROJECT_NAME: fastapi-gemini
  APP_NAME: lesson1
  CONTAINER_IMAGE: ${HARBOR_REGISTRY}/${HARBOR_PROJECT_NAME}/${APP_NAME}:${CI_COMMIT_SHORT_SHA}
  # the below will overwrite each new build
  CONTAINER_IMAGE_LATEST: ${HARBOR_REGISTRY}/${HARBOR_PROJECT_NAME}/${APP_NAME}:latest

# Phase 2: Docker Build
build_image:
  stage: build
  tags:
    - docker-shell
  before_script:
    - echo "Logging into KomebackLab's Harbor Registry at ${HARBOR_REGISTRY}"
    - echo "$HARBOR_PASSWORD" | docker login ${HARBOR_REGISTRY} -u "$HARBOR_USER" --password-stdin
  script:
    - echo "Let's build and tag the Docker Traced SHA Image"
    - docker build -t "${CONTAINER_IMAGE}" -f Dockerfile .
    - echo "Lets build and tag the SHA Image to LATEST to overwrite the previous container"
    - docker tag "${CONTAINER_IMAGE}" "${CONTAINER_IMAGE_LATEST}"
    - echo "All Builds and Tags Complete"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

# Phase 3: Docker Push to Harbor
push_image:
  stage: push
  tags:
    - docker-shell
  needs: ["build_image"]
  before_script:
    - echo "Logging back into KomebackLab's Harbor Registry at ${HARBOR_REGISTRY}"
    - echo "$HARBOR_PASSWORD" | docker login ${HARBOR_REGISTRY} -u "$HARBOR_USER" --password-stdin
  script:
    - echo "Lets push both tagged images to our Harbor Registry"
    - docker push "${CONTAINER_IMAGE}"
    - docker push "${CONTAINER_IMAGE_LATEST}"
    - echo "Push Complete!"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

  
