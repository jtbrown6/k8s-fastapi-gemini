# Default values for hero-registry-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1 # Default number of replicas (kept at 1 due to file storage)

image:
  # repository: harbor.komebacklab.local/your-harbor-project/hero-registry # IMPORTANT: Set this!
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "" # Default tag is Chart.appVersion (0.4.0)

imagePullSecrets:
  - name: harbor-creds # Name of the secret to pull from private registry

nameOverride: "" # Optional: Override the base name of resources
fullnameOverride: "" # Optional: Override the full name of resources

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  # Add Prometheus scraping annotations by default
  prometheus.io/scrape: "true"
  prometheus.io/path: "/metrics"
  prometheus.io/port: "8000"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80 # Port the Service listens on
  targetPort: 8000 # Port the container listens on (should match containerPort)

ingress:
  enabled: true # Create an Ingress resource?
  className: "traefik" # Ingress Class Name
  annotations:
    # Add Cert-Manager annotation
    cert-manager.io/cluster-issuer: komebacklab-ca-issuer
    # Add Traefik HTTPS annotations
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: hero-registry.komebacklab.local # IMPORTANT: Set your desired hostname
      paths:
        - path: /
          pathType: Prefix
  tls:
   # Secrets must be manually created in the namespace or managed by Cert-Manager
   - secretName: hero-registry-tls-secret # Secret name for TLS cert (managed by Cert-Manager)
     hosts:
       - hero-registry.komebacklab.local # IMPORTANT: Set your desired hostname

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# --- Application Specific Configuration ---

# Reference existing ConfigMap and Secret instead of creating them in the chart
# (Could also template them if desired)
configMapName: "hero-registry-config" # Name of the existing ConfigMap
secretName: "hero-registry-secret" # Name of the existing Secret

# Persistent Volume Claim configuration
persistence:
  enabled: true # Create a PVC?
  existingClaim: "hero-registry-data-pvc" # Use the existing PVC created in Lesson 5
  # If not using existingClaim, configure storageClass, accessModes, size:
  # storageClass: "your-nfs-storageclass-name" # IMPORTANT: Set this if creating PVC here
  # accessModes:
  #   - ReadWriteMany # Or ReadWriteOnce
  # size: 1Gi
  mountPath: /data # Mount path inside the container

# --- IMPORTANT ---
# You MUST set image.repository and potentially persistence.storageClass
# either in this file or using --set during helm install/upgrade.
